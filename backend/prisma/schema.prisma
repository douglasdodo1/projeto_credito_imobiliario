// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  cpf String  @id 
  tipo String
  nome String
  idade Int
  renda Float
  Telefones Telefone[]
  SolicitacoesCredito SolicitacaoCredito[]
}

model Telefone {
  id Int @id @default(autoincrement())
  cpf String
  numero String
  cliente Cliente @relation(fields: [cpf], references: [cpf])
}

model ModalidadeCredito{
  id Int @id @default(autoincrement())
  nome String
  ativo Boolean @default(true)
  tipoJuros String
  taxaJuros Float?
  taxaAdministracao Float?
  idadeMinima Int
  idadeMaxima Int
  rendaMinima Decimal?
  rendaMaxima Decimal?
  prazoAnos Int
  criadoEm DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  solicitacoesCredito SolicitacaoCredito[]
}

model LinhaFinanceamento{
  id Int @id @default(autoincrement())
  tipoImovel String
  ativo Boolean @default(true)
  criterioElegibilidade String

  SolicitacoesCredito SolicitacaoCredito[]
}

model SolicitacaoCredito{
  id Int @id @default(autoincrement())
  clienteCpf String
  modalidadeCreditoId Int
  linhaFinanceamentoId Int
  status String
  dataSolicitacao DateTime @default(now())

  cliente Cliente @relation(fields: [clienteCpf], references: [cpf])
  modalidadeCredito ModalidadeCredito @relation(fields: [modalidadeCreditoId], references: [id])
  linhaFinanceamento LinhaFinanceamento @relation(fields: [linhaFinanceamentoId], references: [id])
  atualizadoEm          DateTime              @updatedAt
}